	.TITLE SPRINT8
	;REVISED OCTOBER 19, 1976
	.SBTTL EQU
	.NLIST TTM
	.ASECT
	VLSB:	.BLKB 10	;VERTICAL MOTION COUNTER
	HLSB:	.BLKB 10
	HMSB:	.BLKB 10	;HORIZONTAL MOTION
	VMSB:	.BLKB 10
	ROT:	.BLKB 10	;PICTURE ROTATION 0-27
	DIR:	.BLKB 10	;VELOCITY DIRECTIN 0-27
	VEL:	.BLKB 10	;VELOCITY DIRECTION 0-31
	STAT:	.BLKB 10	;STATUS - ON/CRASH/SKID/COLLISION
	TIM:	.BLKB 10	;PLAYER EVENT TIMER
	SCORE:	.BLKB 10	;PLAYER SCORE
	ROTLSB:	.BLKB 10	;LSB OF ROTATION
	P0:	.BLKB 1		;PLAYER TABLE START ADDRESS P0-P7
	P1:	.BLKB 1 
	P2:	.BLKB 1
	P3:	.BLKB 1
	P4:	.BLKB 1
	P5:	.BLKB 1
	P6:	.BLKB 1
	P7:	.BLKB 1
	T0:	.BLKB 1		;TEMP CELLS
	T1:	.BLKB 1
	T2:	.BLKB 1
	T3:	.BLKB 1
	T4:	.BLKB 1
	T6:	.BLKB 1
	T7:	.BLKB 1
	CTR0:	.BLKB 1	;SPARE TIMERS
	CTR1:	.BLKB 1
	FRCTR:	.BLKB 1	;FRAME TIMER
	GATIM:	.BLKB 1	;GAME TIMER
	GSTAT:	.BLKB 1	;GAME STATUS D0:	RAT-PACK,7=ATTRACT
	SCRTMP:	.BLKB 30	;SCORE TEM 136-156 FOR OUTPUT ROUTINE
		.BLKB 1
	HISCR:	.BLKB 1	;HIGH SCORE FOR FLASH
	T8:	.BLKB 1
	T9:	.BLKB 1
	T10:	.BLKB 1
	T11:	.BLKB 1
	INTER0:	.BLKB 1	;INTERRUPT TEMP CELLS
	INTER1:	.BLKB 1
	INTER2:	.BLKB 1
	T12:	.BLKB 1
	T13:	.BLKB 1
	T14:	.BLKB 1
	TRAKN:	.BLKB 1	;TRACK NUMBER
	HMSBT:	 .BLKB 10	;COMPACTED H POST
	TIMER:	.BLKB 1
	;CRASH TIME
	STKPTR	=377	;STACK POINTER
	DISP	=014000	;PLAYFIELD RAM
	POSH	=016000	;H POS RAM
	POSV	=016020	;V POS RAM
	POSD	=016040	;DISPLAY PICT RAM
	SYNC	=016017	;V BLANK IN
	CINT	=016000	;COLLISION IN
	COINLK	=016060	;COIN LOCK OUT
	CRSHON	=016401	;CRASH
	TEAM	=016405	;TEAM COLORS
	SWP0	=016001	;SWITCH IN P0
	SWP1	=016012	;REMOTE CONTROLS
	GTIME	=016011	;GAME TIMER IN
	REMCN	=016013	;REMOTE COINS
	SKIDON	=016402	;SKID ON
	STRST	=017400	;STEERING RESET; INDY 8 TABLES
	CHKPT	=22000
	PFPICT	=22012
	MOTOR	=017000	;MOTOR SOUND
	INTRES	=016400	;COLLISION INTERRUPT RESET
	ATGAME	=016406	;ATTRACT
	OPCTL	=16012	; - TRACK SEL = D1
	STEST	=016005	;SELF TEST IN BIT 7
	HORO	=0
	VERO	=20
	ROTO	=40
	;****************************************************************
	.PAGE
	.=26000
	;******************MAIN PROGRAM *********************************
	.SBTTL MAIN PROGRAM INITIALIZE
INIT:	SEI	;INITIALIZE - INTERRUPT OFF
	LDX I,377	;CLEAR RAM
1$:	CLR X,0
	DEX
	BNE 1$
	LDS I,STKPTR
	JSR E,INITSB
	JSR E,RSTAL	;RESET ALL CARS
INIT2:	SEI
	LDX I,PFPICT+736	;PLAYFIELD OUT
	JSR E,PFADJ	;STEP TO PROPER P.F.
	LDS I,DISP+1777	;S POINTS TO OUTPUT RAM + X TO ROM
	LDAB I,100	;B IS & T0 ARE COUNTERS
	STAB D,INTER2
2$:	LDAB I,010
	STAB D,T1
5$:	LDAA E,SYNC	;WAIT FOR V BLANK
	BPL 5$
6$:	LDAA E,SYNC
	BMI 6$
3$:	LDAA I,01
	STAA D,T2
	LDAA X,0		;GET NEXT BYTE FOR FIELD
	STAA D,T3
4$:	LDAA D,T3
	TAB
	BITA I,020	;CHECK VECTOR BIT
	BEQ 7$			;CHANGE TO A BRA TO DISPLAY ARROWS
	CLRA
	BRA 8$
7$:	ANDA I,300
	ORAA I,50
	LSRB	;FORMAT PLAYFIELD FOR ASCII CHARACTER 28-30
	LSRB
	LSRB
	LSRB
	ANDB I,03
	ABA
8$:	ASL E,T3
	ASL E,T3
	ASL E,T3
	ASL E,T3
	PSHA			;DEPOSIT ONTO SCREEN
	DEC E,T2		;TWO BYTE COUNTER
	BEQ 4$
	DEX
	DEC E,T1
	BNE 3$			;OUTPUT 16 LOC EACH FRAME
	STX D,INTER0
	STS D,T10
	LDS I,377
	JSR E,SWITCH		;CHECK SWITCHES WHILE OUTPUTTING SCREEN
	LDS D,T10
	LDX D,INTER0
	DEC E,INTER2
	BNE 2$
	LDAA D,GSTAT
	ASLA
	BPL MNLOOP
	LDS I,377
	JSR E,RSTAL
	JSR E,TNSMSG
	JMP E,PROC
	.PAGE
	.SBTTL MAIN LOOP, TIMERS, TRACK SELECT
MNLOOP:	LDS I,377
	LDAA E,STEST	;CHECK TEST SWITCH
	BMI 1$
	JSR E,TEST
1$:	LDAA D,GSTAT	;CHECK FIRST COIN FLAG
	ASLA
	BPL 5$
2$:	LDAA E,OPCTL	;CHECK NEW TRACK SELECT SWITCH
	LSRA
	LSRA
	BCS 5$
	INC E,TRAKN		;INCREMENT TRACK NUMBER
	JMP E,INIT2
5$:	DEC E, FRCTR		;NEXT FRAME
	LDAA D,FRCTR
	BEQ 4$
	BITA I,077
	BNE EVFR	;1 SEC TIMER
	LDAA D,GSTAT
	BEQ EVFR
	BRA TSECTIM
4$:	LDAA D,GATIM	;CHECK GAME TIMER
	BEQ FRSEC
	DEC E,GATIM
	BNE FRSEC
ENDGAME: JSR E,INITSB	;RESET STATUS
	BRA EVFR
FRSEC:	TST E,GSTAT	;EVERY 4 SECONDS UPDATE TIMER
	BNE TSECTIM
	INC E,TRAKN	;STEP TOO NEW TRACK IN ATTRACT
	JMP E,INIT2
TSECTIM:	BMI EVFR
	DEC E,CTR0	;CHECK FIRST COIN COUNTER
	LDAA D,CTR0
	ANDA I,017
	BEQ STGAM
	CMPA I,10	
	BEQ TNSCO
	BRA EVFR
STGAM:	LDAA I,200	;START GAME
	STAA D,GSTAT
	LDAA E,GTIME	;GAME LENGTH 1 MIN TO 3 1/2 MINUTE
	COMA
	ASLA
	ADDA I,16
	STAA D,GATIM
	JSR E,RSTAL 	;RESET CARS
TNSCO:	JMP E,INIT2
	.PAGE
	.SBTTL PLAYER TIMERS, SKID, CRASH, GAS, BRAKE
EVFR:	LDX I,MOTOR
	STX D,T12
	LDX I,00	;TAKE CARE OF EACH PLAYER VELOCITY EVERY FRAME
	CLR E,T14
	LDAA D,TIMER
	BEQ EVFR1
	DEC E,TIMER
	LDAA I,02		;SET CRASH BIT
	STAA D,T14
EVFR1:	LDAB X,STAT
	BPL 11$		;BRANCH IF A DRONE!!
	ANDB I,375	;DON'T PUT IN CRASH BITS
	ORAB D,T14
	STAB D,T14	;COLLECT SKID & CRASH FLAGS IN T2
	LDAB X,STAT
11$:
1$:	STX D,T6		;SAVE CAR NUMBER
	TST X,STAT	;IS IT A DRONE?
	BPL 10$		;YES, NO MOTOR
	LDAA X,VEL
	CMPA I,4*8.	;LOW MOTOR FOR LOW SPEED
	BHI 12$
	LDAA I,1
	LDX D,T12
	STAA X,0	;TURN OFF MOTOR WHEN STOPPED
	BRA 10$
12$:
	LDX D,T12
	COMB
	STAB X,0		;STORES MOTOR FREQUENCY, HIGH OR LOW FREQ
	COMB			;HIGH IF GAS OR ELSE LOW
;
;ACCELERATE OR DE-ACCELERATE
;
10$:
	LDX D,T6		;GET CAR NUMBER
	LDAA D,FRCTR
	ANDA I,07		;UPDATE ONCE PER 8 FRAMES
	BNE EVFR2
	LDAA X,VEL		;GET CAR SPEED
	LSRA
	LSRA			;0-31
	LSRA
	LSRA			;0-16
	LDX I,ACTAB		;GUESS ACCELERATING
	LSRB			;TEST ACCELERATOR SWITCH
	BCS 2$			;RIGHT
	LDX I,DACTAB		;WRONG, DEACCELERATE
2$:
	JSR E,ADDOF		;ADD VELOCITY TO TABLE PTR.
	LDAA X,0			;LOAD BYTE OF VECTOR
	BITB I,20		;TEST IF SECOND GEAR
	BNE 20$			;YES
	LSRA
	LSRA			;GET 1ST GEAR ACCELERATION
	LSRA
	LSRA
20$:	ANDA I,17		;MASK TO LOW NIBBLE
	BITA I,10		;IS NIBBLE NEGATIVE?
	BEQ 21$			;NO, POSITIVE
	ORAA I,360		;EXTEND SIGN
21$:	LDX D,T6		;GET CAR NUMBER
	ASLA			;DOUBLE ACCELERATION
22$:
	ADDA X,VEL		;ADD TO OLD VELOCITY
	STAA X,VEL
EVFR2:	LDAA X,VEL	;GET CURRENT SPEED
	LDAB I,234		;CRASH C, CRASH DISABLE
	CMPA I,10.*8.		;TEST VEL
	BLS 23$
	LDAB I,226		;CRASH C, CRASH W
23$:
	LDAA D,FRCTR
	LSRA
	BCS 24$
	ORAB I,100		;CLEAR SKIDS ON EVEN FRAMES ONLY
24$:	ANDB X,STAT		;CHANGE STATUS
	STAB X,STAT
;
;UPDATE DIRECTION
;
8$:	LDAB I,3	;GET THE VELOCITY
	TST X,VEL	;TEST HIGH BIT OF VELOCITY
	BPL 9$		;LOW VEL
	LDAB I,2	;HIGH VELOCITY
9$:	STAB D,T3	;SAVE CONSTANT
	LDAB X,ROTLSB	;GET ROTATION
	ANDB I,370	;MASK TO HIGH 5 BITS
	LDAA X,DIR
	ANDA I,370	;MASK DIRECTION TO HIGH 5 BITS
	SBA		;SUB ROTATION FROM DRECTION
	BEQ CRASH		;NO CHANGE NEEDED
	BMI 15$		;TEST IF SKIDDING LEFT
	NEG E,T3	;TURN RIGHT
	CMPA I,20	;SKIDDING TURN?
	BMI 18$		;NO SKID
	BPL 17$		;MAKE SKID NOISE
15$:	CMPA I,370
	BPL 18$		;NO SKID
17$:	LDAA X,STAT
	ORAA I,100	;GET SKID BIT
	STAA X,STAT
18$:	LDAB X,DIR
	ADDB D,T3	;ADD IN +/- CHANGE
	LDAA D,T3
	JSR E,MOD28	;ADJUST B MOD 28
	STAB X,DIR
CRASH:	LDAA X,STAT	;CRASH SEQUENCE
	BITA I,02	;CHECK FOR NEW CRASH
	BEQ DRNCR
	BITA I,10	;CRASHES DISABLED?
	BNE DRNCR	;YES
	ORAA I,10
	STAA X,STAT	;DISABLE FUTURE CRASHES
	CLR X,VEL	;ZERO VELOCITY
	LDAA I,32.
	STAA D,TIMER	;CRASH SOUND FOR 1/4 SECOND
	.PAGE
	.SBTTL DRONE CARS, OUT OF BOUNDS, COMPACTED HMSB, AUDIO
DRNCR:	TST E,GSTAT	;CHECK FOR ATTRACT MODE
	BPL 1$
2$:	LDAB X,STAT
	BMI 1$	;CHECK IF PLAYER ON
	JSR E,GETDR	;NOPE CONTINUE - GET DIRECTION CAR SHOULD GO
	LDAB X,ROTLSB	;CHECK IF DIRECTION CHANGE REQUIRED
	ANDB I,374
	SBA
	LDAB I,3	;STEERING RATE
	TSTA
	BNE 3$
	INC X,STAT	;GAS ON FLAG - CAR GOING STRAIGHT
	BRA 1$
3$:	BPL 4$	;TURN REQUIRED
	NEGB
4$:	JSR E,CW
1$:	TST X,STAT
	BPL 6$
	LDAA X,HMSBT	;OUT OF BOUNDS CHECK
	TAB
	ADDB I,4
	ANDB I,370
	BNE 5$	;OUT OF BOUNDS H
	ASL X,HMSB
	CLR X,VEL		;RESET VELOCITY
5$:	LDAA X,VMSB
	TAB
	SUBB I,6
	ANDB I,360
	BNE 6$
	CLR X,VEL	;RESET VELOCITY
	ADDA X,VMSB	;V OUT OF BOUND
	SUBA I,014
	STAA X,VMSB
6$:	LDAA X,ROT	;UPDATE HMSB TEMP
	ASLA
	LDAA X,HMSB
	RORA
	STAA  X,HMSBT
	INC E,T13	;INCREMENT MOTOR SOUND POINTER
	INX
	CPX I,010
	BEQ AUDOT
	JMP E,EVFR1	;DO NEXT PLAYER
AUDOT:	LDAA D,T14	;OUTPUT CRASH & SCREECH
	TAB
	ROLA
	ROLA
	ROLA
	COMA
	STAA E,SKIDON
	LSRB
	STAB E,CRSHON
	JSR E,SWITCH
	.PAGE
	.SBTTL VERT OUT & SCORE FLASH
VBLANK:	LDX I,8.		;SETUP FOR V BLANK
	LDAB I,3
	STAB E,TEAM	;JUST A CONVENIENT PLACE TO KEEP TEAM OFF
2$:	LDAA E,SYNC	;WAIT FOR V BLANK
	BPL 2$
1$:	LDAA E,SYNC
	BMI 1$
	SEI
;
;OUTPUT CAR POSITIONS TO SHELLS IF A DRONE
;
OUTPUT:
2$:	STX D,T0		;SAVE NUMBER
	LDAA X,ROT-1
	PSHA
	LDAA X,VMSB-1		;SAVE COORDS ON STACK
	PSHA
	LDAA X,HMSB-1
	PSHA
	LDAB X,STAT-1		;PLAYER OR DRONE
	BITB I,220		;PLAYER
	BNE 6$			;PLAYER OR EX-PLAYER
	LDAA D,T1		;GET CAR NUMBER
	LDX I,POSH-1		;POINT AT CAR OUTPUTS
	JSR E,ADDOF
	PULA
	STAA X,HORO+10		;H POS
	PULA
	STAA X,VERO+10		;STORE V POS
	PULA
	STAA X,ROTO+10		;STORE ROT
	LDAB I,0
	STAB X,VERO		;REMOVE CAR
	STAB X,HORO
	STAB X,ROTO	
	BRA 9$
6$:
	LDAA D,T1		;GET CAR NUMBER
	LDX I,POSH-1		;OUTPUT ADDS
	JSR E,ADDOF
	PULA
	STAA X,HORO		;H POS
	PULA
	STAA X,VERO		;UPOS
	PULA
	STAA X,ROTO		;ROTATION
	LDAB I,0
	STAB X,VERO+10		;REMOVE DRONE CAR
	STAB X,HORO+10
	STAB X,ROTO+10
9$:	LDX D,T0		;GET CAR NUMBER
	DEX
	BNE 2$			;NOT DONE YET
	LDS I,SCRTMP-1
;
;OUTPUT SCORES
;HIGH SCORE BYTES
;
	.IRP X,<151,167,500,576,1751,1766,1400,1476>
	PULA
	STAA E,DISP+X
	.ENDM
;LOW SCORE BYTES
	.IRP X,<150,166,540,536,1752,1767,1440,1436>
	PULA
	STAA E,DISP+X
	.ENDM
;BLANKS OR END OF DRONE WORD
	.IRP X,<147,165,600,476,1753,1770,1500,1376>
	PULA
	STAA E,DISP+X
	.ENDM
TSECOUT:	LDAA D,GSTAT	;TENSEC COUNT
	ASLA
	BPL SCRSET
	LDAA D,CTR0	;OUTPUT TIME
	CMPA I,8.		;COUNT FROM 8
	BHI SCRSET
	ORAA I,060
	STAA E,15045
	ORAA I,100
	STAA E,14732
SCRSET:	LDS I,SCRTBL-1		;SET ROTATINS OF SCORE
	LDX I,8.			;CAR NUMBER
1$:	PULA			;GET ROTATION CODE
	STAA X,SCRTMP-1
	STAA X,SCRTMP+10-1	;THREE BYTES OF INFO.
	STAA X,SCRTMP+20-1
	DEX
	BNE 1$			;NOT DONE YET.
SCRFRM:	LDS I,SCORE-1
	LDX I,0			;FORMAT SCORE FOR OUTPUT
2$:	PULA			;GET THE SCORE
	LDAB I,220
	BITB X,STAT
	BNE 3$			;NOT A DRONE
	LDAB I,54-60		;TR CODE
	BRA 4$			;PUT ON SCREEN
3$:	TAB
	LSRB
	LSRB			;GET HIGH BYTE OF SCORE
	LSRB
	LSRB
4$:	ADDB X,SCRTMP		;ADD TO ROTATION
	STAB X,SCRTMP
	ANDA I,017		;LOW BYTE OF SCORE
	LDAB I,220
	BITB X,STAT
	BNE 5$			;NOT A DRONE
	LDAA I,55-60		;AF CODE
5$:	ADDA X,SCRTMP+10
	STAA X,SCRTMP+10
	LDAA I,-60		;BLANK CODE
	LDAB I,220
	BITB X,STAT
	BNE 6$			;NOT A DRONE
	LDAA I,56-60		;FIC CODE
6$:	ADDA X,SCRTMP+20
	STAA X,SCRTMP+20
	INX
	CPX I,10
	BNE 2$
SCRFLH:	LDAA I,60	;FLASH LEADING PLAYERS SCORE
	BITA D,FRCTR	;EVERY 32 FRAMES
	BNE PROC
	LDX D,HISCR-1
	CLR X,SCRTMP
	CLR X,SCRTMP+10
	CLR	X,SCRTMP+20
	.PAGE
	.SBTTL INTERRUPT ENABLE, SWITCH CHECK, STEP, SCORE, PLAYER COLLISION
PROC:	LDS I,STKPTR	;PROCESSING STARTS
	LDAA D,GSTAT
3$:	ROLA	;ENABLE GAME
	ROLA
	STAA E,INTRES
	CLI
	COMA
	STAA E,ATGAME
	JSR E,SWITCH
	LDAA D,FRCTR
	LSRA
	BCC 1$
	JSR E,COLIS	;CHECK COLLISION OF CAR TO CAR
	BRA 2$	;EVERY OTHER FRAME
1$:	JSR E,SCR	;CHECK IF SCORE UPDATE
2$:	JSR E,STEP	;STEP EACH OF THE EIGHT PLAYERS
	JMP E,MNLOOP
  .PAGE
	.SBTTL INDY8 SUBROUTINES***************************************
	.SBTTL SWITCH CHECK, PLAYER COLLISION, SCORE, RESET CAR
SWITCH:	LDX I,0	;POLLS SWITCHES
	STX D,T8
	LDX I,SWP0
NXSW1:	LDAA X,0
	STX D,T6
	LDX D,T8
	LSRA
	STAA D,T4
	BCS STEER	;CHECK COIN
	INC X,TIM	;COIN IN BUMP  TIMER
	LDAB X,TIM
	CMPB I,003	;CHECK FOR 2 FRAMES
	BNE NXSW
	SEI
	LDAB I,220 	;REAL COIN
	STAB X,STAT	;SET COIN ON FLAG
	JSR E,RSTCAR
	TST E,GSTAT
	BNE 1$
	LDAB I,100
	STAB D,GSTAT	;SET COIN RECEIVED FLAG BIT 7
	LDAA I,11	;SET FIRST COIN TIMER
	STAA D,CTR0	;LENGTH OF TIME IN FIRST COIN
	STAA D,FRCTR	;MODE PRIOR TO GAME START
1$:	LDX D,T6
	CLR X,57	;UNLOCK COIN
NXSW:	LDX D,T6
	INC E,T9
	INX
	CPX I,SWP0+10
	BNE NXSW1
	CLR E,STRST	;RESET STEERING FLAGS
	RTS
STEER:	LDAB X,STAT
	BMI 2$
	CLR X,TIM	;ZEROES TIME ON DRONES
	BRA NXSW
2$:	LDAA D,T4
	LDAB D,GSTAT
	BPL NXSW
	LSR E,T4
	LSR E,T4
	LDAB X,STAT
	BITB I,4	;CAR TO CAR COLLISION?
	BEQ 22$		;NO, ALWAYS STEER
	LDAB D,FRCTR
	ANDB I,1	;ONLY EVERY 2 FRAMES
	BEQ 23$		;NOW
	CLC		;LATER
22$:
	BCC ACCEL
23$:	LDAB I,2	;STEERING RATE
	LSRA
	BCC 1$		;CLOCKWISE
	NEGB		;COUNTER-CLOCKWISE
1$:	JSR E,CW	;UPDATE ROTATION
ACCEL:	LDAA D,T4
	LSRA
	BCS SHIFT
	LDAB X,STAT
	ORAB I,01
	STAB X,STAT
SHIFT:	LSRA			;TEST GEAR SHIFT BIT
	BCC SHFTLW	;LOW GEAR
	LDAB I,40	;GEAR BIT
	ORAB X,STAT
	STAB X,STAT	;SET IN CAR STATUS
	BRA NXSW
SHFTLW:	LDAB X,STAT
	ANDB I,337	;CLEAR HIGH GEAR BIT
	STAB X,STAT
	BRA NXSW
COLIS:	LDX I,8.	;CHECK COLLISION OF 8 CARS
	CLR E,T8
1$:	LDAA X,STAT-1
	ANDA I,373		;CLEAR CAR COLLISION BIT
	STAA X,STAT-1
	DEX
	BNE 1$			;DO ALL 8 CARS
	LDX I,7
COLIS1:
	LDAA X,VMSB
	LDAB X,HMSBT
	STAB D,T0
	STAA D,T1
	CLRA
	STX D,T2
1$:	LDAB D,T0
	SUBB X,HMSBT-1	;CHECK H & THEN V OVERLAP
	BPL 10$
	NEGB
10$:	CMPB I,8.	;TEST IF TOO CLOSE X
	BHI 3$
	LDAB D,T1
	SUBB X,VMSB-1
	BPL 11$
	NEGB
11$:	CMPB I,8.	;TEST IF TOO CLOSE Y
	BHI 3$
	INCA 	;MATCH COUNT IN A
	STX D,T6
	LDAB D,T7
	DECB
	PSHB 	;STACK HAS X OF OTHER UNIT
3$:	DEX
	BNE 1$
	TSTA
	BEQ NXTCOL	;NO COLLISION
	LDX D,T2
5$:	LDAB X,STAT
	BPL 6$	;ONLY ENABLE SKID ON ACTIVE CARS
	BITB I,12	;TEST IF ALREADY CRASHING
	BNE 6$
	ORAB I,104	;SET SKID FLAG
	STAB X,STAT
6$:	DECA
	BMI NXTCOL
	PULB	;GET OTHER CAR (S)
	STAB D,T9
	LDX D,T8
	BRA 5$
NXTCOL:	LDX D,T2	;STEP TO NEXT PLAYER
	DEX
	BNE COLIS1
	RTS
SCR:	LDX I,10	;CHECK IF ANY OF EIGHT PLAYERS SCORED
1$:	TST X,STAT-1	;CHECK IF PLAYER ON
	BPL 55$
	LDAA X,VMSB-1	;GET VERITICAL POSITION
	ANDA I,360	;MASK TO HIGH 4 BITS
	LDAB X,HMSBT-1	;HORIZONTAL POSITION
	LSRB
	LSRB
	LSRB		;IN LOW NIBBLE
	LSRB
	ABA		;ADD TO FOR COMPOSITE X,Y
	STAA D,T14	;SAME RESULT
	LDAA X,SCORE-1
	ANDA I,17	;USE SCORE AS INDEX TO FIND
	CMPA I,4
	BLS  10$
	SUBA I,5	;MOD 5 ON THE INDEX
10$:
	ASLA
	ASLA		;TIMES 4
	STX D,T0
	LDX I,CHKPT
	JSR E,PFADJ	;STEP TO PROPER PF NO
	JSR E,ADDOF
	LDAB I,4	;LOOP COUNTER
2$:	LDAA X,0	;GET NEXT CHECKPOINT
	CMPA D,T14	;ARE WE THERE?
	BEQ 3$		;YES
	INX
	DECB		;DOWN LOOP COUNTER
	BNE 2$
	BEQ 5$		;NO SCORE HERE
3$:
	LDX D,T0	;RESTORE INDEX
	LDAA X,SCORE-1
	ADDA I,01
	DAA
	TAB
	STAB X,SCORE-1
	CLR E,HISCR-1	;CHECK HIGH SCORE
	STX D,T2
	LDX D,HISCR-1
	LDAB X,SCORE	;CHECK IF NEW HIGH SCORE
	LDX D,T2
	CBA
	BLS 4$	;YES NEW SCORE SET POINTER
	DEX	;GET THE TRUE CAR NUMBER
	STX D,HISCR-1
4$:	CMPA I,231	;SCORE=99
	BNE 5$
	JMP E,ENDGAME
5$:	LDX D,T0	;RESTORE CAR NUMBER
55$:	DEX
	BNE 1$		;NOT DONE YET
6$:	RTS
RSTCAR:	STX D,T0	;RESET CAR POSITION & SCORE
	LDAA I,330	;X POINTS TO PLAYER
	STAA X,HMSB	;SET HPOS & DIR
	LDAA I,270
	STAA X,ROT
	LDAA	I,21.*8.	;SET THE INITIAL ROTATION
	STAA X,ROTLSB
	LDAA I,36
	CLR X,TIM
	CLR X,VEL
1$:	ADDA I,012	;DELTA VPOS
	DEC E,T1
	BPL 1$
	STAA X,VMSB
	RTS
	.PAGE
	.SBTTL ROTATE CAR, STEP CAR, DRONE CAR DIRECTION
CW:	
	TBA
	ADDB X,ROTLSB
	JSR E,MOD28	;ADJUST B MOD 28
	STAB X,ROTLSB
	STX D,T0
	LDX I,CWT	;LOAD POINTER TO ROTATION TABLE
	TBA
	LSRA
	LSRA
	LSRA
	JSR E,ADDOF	;ADD A TO X
	LDAA X,0
	LDX D,T0
	LDAB X,ROT
	ANDB I,200	;SAVE MSB OF HORIZONTAL
	ABA
	STAA X,ROT
	RTS
STEP:	LDX I,0	;STEP EIGHT OBJECTS
STEP2:	TST E,GSTAT
	BMI 1$		;BRANCH IF PLAYING
	RTS
1$:	STX D,T0
	LDAB X,VEL
	LSRB
	LSRB		;VEL/8
	LSRB
	TST X,STAT
	BMI 2$		;BRANCH IF NOT ALONE
	CMPB I,9.
	BLS 10$		;TOO SLOW TO SHIFT
	LDAA I,40
	ORAA X,STAT	;REQUEST HIGH GEAR
	STAA X,STAT
10$:
	LDX I,DRSPD
	LDAA D,T1
	JSR E,ADDOF	;POINT AT SPEED TABLE
	CMPB X,0
	BLS 3$	;SET MAXIMUM SPEED
	LDAB X,0
3$:	LDX D,T0
2$:	LDAA X,DIR	;SET CARS AT DIFFERENT SPEED DIR IS HIGH 5 BITS OF ISOLATION
	LSRA
	LSRA		;GET 5 BITS OF DIRECTION
	LSRA
	ANDA I,37
	TSTB
	BNE 55$
	JMP E,STPNX	;CAR ISN'T READY
55$:
	CMPB I,20
	BMI 5$	;VELOCITY SET FOR 0-15
	LSRB	;FOR VEL GREATER THAN 16-DIVIDE BY 2
5$:	LDX I,HOFF	;ADD A TO H OFFSET
	JSR E,ADDOF
	LDAA X,0
	STAA D,T10	;HORIZONTAL POSITION
	LDAA X,VOFF-HOFF
	STAA D,T11	;VERTICAL POSITION
	LDX I,0
	STX D,T2	;CLEAR T2,3,6,7
	STX D,T6
	TST E,T10
	BPL 8$
	COM E,T2	;SET T2=-1

8$:	TST E,T11
	BPL 6$
	COM E,T6	;SET T6=-1
6$:	LSRB		;SHIFT IN BIT OF VELOCITY
	BCC 7$	;MULTIPLY LOOP
	LDAA D,T10	;GET HPOS
	ADDA D,T3	;MULTIPLY IT
	STAA D,T3
	LDAA D,T11	;GET VPOS
	ADDA D,T7	;MULTIPLY IT
	STAA D,T7	;H OFFSET IN 3-V IN 7
7$:	ASL E,T10
	ASL E,T11
	TSTB		;DONE?
	BNE 6$
	LDX D,T0	;MPY DONE RESTORE X
	TST X,VEL	;CHECK IF VEL >16
	BPL 4$
	ASL E,T3	;MULTIPLY RESULT BY 2
	ROL E,T2
	ASL E,T7
	ROL E,T6
4$:	ASL E,T3	;MULTIPLY OFFSET BY 2
	ROL E,T2
	LDAA X,VLSB
	ADDA D,T7	;ADD POSITION CHANGE TO V AND H POSITIONS
	STAA X,VLSB
	LDAA X,VMSB
	ADCA D,T6
	STAA X,VMSB
	LDAA X,HLSB
	ADDA D,T3
	STAA X,HLSB
	LDAA D,T2
	TAB
	ADCA X,HMSB
	STAA X,HMSB
	BCC 9$
	COMB
9$:	ANDB I,200
	EORB X,ROT	;HANDLE THE TURKEY 9TH HORIZONTAL BIT IN ROTATION WORD
	STAB X,ROT
STPNX:	INX
	CPX I,010
	BNE 1$
	RTS
1$:	JMP E,STEP2
GETDR:	LDAB X,ROT	;GET DIRECTION DRONE CAR SHOULD BE GOING
	ASLB
	LDAB X,HMSB
	RORB
	ADDB I,4	;X POINTS TO CAR - T0-5 USED
	COMB	;GET H POS, AROT TO GET CENTER OF
	LSRB	;CAR COMPLIMENT DIVIDE BY 16
	LSRB
	LSRB
	STAB D,T2
	LSRB	;T2 HAS LSB OF PICTURE
	LDAA X,VMSB
	SUBA I,26	;V OFFSET TWIDGE
	STX D,T8
	LDX I,PFPICT-1
	JSR E,PFADJ
	STX D,T0	;T0,T1 ARE THE PLAYFIELD POINTER
	ASLA
	BCC 1$
	INC E,T0
1$:	ANDA I,360	;ADD VERTICAL IN - 5 BITS TO 4 BITS OF H
	ABA
	ADDA D,T1
	STAA D,T1	;INDEX INTO PLAYFIELD TABLE
	BCC 2$
	INC E,T0
2$:	LDX D,T0
	LDAA X,0	;GET DIRECTION BYTE FROM ROM
	LSR E,T2	;CHECK LSB OF HORIZ POS
	BCC 3$
	LSRA
	LSRA		;USE HIGH BYTE FOR DIRECTION
	LSRA
	LSRA
3$:	LSRA		;ELIMINATE THE VECTOR BIT
	LDX I,STPDR
	ANDA I,07
	JSR E,ADDOF
	LDAA X,0	;GET BYTE FROM DIRECTIN TABLE
	LDX D,T8	;A HAS NEW DIR RTS
	RTS
	.PAGE
	.SBTTL COLLISION INTERRUPT,TEN SEC MESSAGE, MESSAGE OUT, PLAYER TO WALL
COLINT:	LDAA E,CINT	;COLLISION INTERRUPT
	CLR E,INTRES
	TAB
	ANDA I,07	;MASK INPUT TO 8 MOVING CARS
	STAA D,INTER1
	CLR E,INTER0
	LDX D,INTER0
	LDAA X,STAT	;CHECK IF ALREADY IN COLLISION
	BMI 2$	;CHECK IF PLAYER IS ENABLED D7 = 0 & NOT ALREADY IN CRASH
1$:	LDAA I,01	;REENABLE INTERRUPT
	STAA E,INTRES
	RTI
2$:	ORAA I,2	;SET CRASH BIT IN STATUS
	STAA X,STAT
	BRA 1$
TNSMSG:		;MESSAGE TEN SEC TO GAME
	LDX I,TENSEC
MSGOT:	SEI
	STS D,T6
	TXS	;MESSAGE OUT
	LDX I,DISP+1044	;SET X TO POINT TO MESSAGE-1
	STX D,T0
	LDX I,DISP+733	;SET X & T0 TO POINT TO PF START LOCATION FOR
MSGOT1:	LDAA E,SYNC	;WAIT FOR VSYNC
	BPL MSGOT1
2$:	LDAA E,SYNC
	BMI 2$
4$:	STX D,T2
	LDX D,T0
	PULA
	CMPA I,46	;46 IS END MESSAGE CHARACTER
	BNE 3$
	LDS D,T6
	RTS
3$:	STAA X,0	;OUTPUT RIGHT SIDE UP MESSAGE
	INX
	STX D,T0
	LDX D,T2
	ORAA I,100	;100 FLIPS PICTURE UPSIDE DOWN
	STAA X,0	;OUTPUT UPSIDE DOWN MESSAGE
	DEX
	BRA 4$
	.PAGE
	.SBTTL UTILITY SUBROUTINES TEST
ADDOF:	STX D,T2	;ADD A TO X
	ADDA D,T3
	STAA D,T3
	BCC 1$
	INC E,T2
1$:	LDX D,T2	
	RTS
RSTAL:	LDX I,0	;RESET 8 CARS & SCORE
1$:	CLR X,SCORE
	LDAA X,STAT
	BMI 2$
	CLR X,STAT
2$:
	JSR E,RSTCAR
	INX
	CPX I,10
	BNE 1$
	RTS
INITSB:	CLR E,GSTAT	;CLEAR GAME STAT & INDIVIDUAL STAT
	CLR E,GATIM	;RESET TIME
	LDX I,10
1$:	LDAA X,STAT-1
	ANDA I,20	;CLEAR ALL BUT LAST PLAYED BITS
	STAA X,STAT-1
	DEX
	BNE 1$
INIT1:	LDAA I,1	;COIN LOCKOUT OFF-ATTRACT ON TERM OFF
	LDX I,COINLK
1$:	STAA X,0
	INX
	CPX I,ATGAME+1
	BNE 1$
	RTS
PFADJ:	STX D,T10	;ADJUST X TO PROPER TRACK NUMBER, X + TRACK NUMBER TIMES 512
	PSHA
	LDAA D,TRAKN	;ADD TRACK NO TOX
	ANDA I,003	;CHANGE TO DECREASE # OF TRACKS
	ASLA
	ADDA D,T10
	STAA D,T10
	LDX D,T10
	PULA
	RTS
;
;ADJUST B MOD 28, A HAS DIRECTION OF CHANGE
;
MOD28:
	CMPB I,27.*8.+7
	BHI MOD29
	BLS MOD31	;ALREADY LESS THEN 28
MOD29:	TSTA		;TEST DIRECTION OF CHANGE
	BPL MOD30	;FROM 27 TO ZERO
	LDAB I,27.*8.	;FROM ZERO TO 27
	BRA MOD31
MOD30:	CLRB
MOD31:	RTS
TEST:	SEI	;TEST ROUTINE
	CLR E,ATGAME	;TEST SWITCHES USING SCREEN
	LDX I,ERRMSG	;PUT DIAGNOSTIC MESSAGE UP
	JSR E,MSGOT
	LDX I,DISP+733
	LDAA I,0
	LDAB I,22.
1$:
	STAA X,0	;BLANK UPSIDE DOWN LINE
	DEX
	DECB
	BNE 1$
RMCHK:	LDAA I,377	;CHECK RAME
	LDX I,377
1$:	STAA X,0
	CMPA X,0
	BNE RAMER
	DECA
	BNE 1$
	DEX
	BNE 1$
	LDX I,22000	;ROM CHECK 1
2$:	ADDA X,0
	INX
	CPX I,26000
	BNE 2$
	TSTA
	BNE ROMER1
3$:	ADDA X,0	;ROM 2 CHECK
	INX
	CPX I,32000
	BNE 3$
	TSTA
	BNE ROMER2
	BEQ SWCHK
RAMER:	LDX I,RAMERR
	LDAA I,61	;ASCII 1
	BRA RMCHK2
ROMER1:	LDAA I,61	;ASCII 1
	BRA ROMER3
ROMER2:	LDAA I,62	;ASCII 2
ROMER3:	LDX I,ROMERR
RMCHK2:	LDAB I,0	;ASCII BLANK
RMCHK3:	TST E,SYNC
	BPL RMCHK3	;WAIT FOR V BLANK
RMCHK4:	TST E,SYNC
	BMI RMCHK4
	STAB X,0	;STORE MESSAGE ON THE SCREEN
	STAA X,1
SWCHK:	LDAA E,STEST
	BPL 1$
	JMP E,MNLOOP	;NO MORE TESTING
1$:	CLR E,CRSHON	;CRASH AUDIO ON
	LDX I,SWP0
	CLR E,T3	;CLEAR COIN ON LOCATION
	CLRA
2$:	EORA X,0	;X OR ALL SWITCHES
	LDAB X,0
	LSRB
	BLS 3$		;COIN IS NOT ON
	STX D,T2	;SAVE PLAYER NUMBER
3$:	INX
	CPX I,SWP0+10	;DONE?
	BNE 2$
	STAA D,T0
	LSRA
	EORA D,T0	;EXOR GAS AND SHIFT TOGETHER
	ANDA I,8.	;MASH TO OUR BIT
	BNE 4$
	CLR E,SKIDON	;EVEN PARITY SKID ON
	BRA 5$
4$:	LDAA I,1
	STAA E,SKIDON	;ODD PARITY,SKID OFF
5$:	LDX I,COINER	;COIN MESSAGE PTS
	LDAB I,17	;O
	LDAA I,13	;K
	TST E,T3	;WAS THERE A COIN?
	BEQ RMCHK3	;OUTPUT OK
	LDAA D,T3

	ORAA I,60	;FOR PLAYER NUMBER
	BRA RMCHK2	;OUTPUT COIN ON NUMBER
	.SBTTL SPRINT8 STEERING, SCORE, STEP & MESSAGE TABLES, CHECKSUM
;
;TABLE TO MAP PLAYFIELD ARROWS TO ROTATIONS
;
	.RADIX 10
STPDR:
	.BYTE 7*8,11*8,21*8,25*8
	.BYTE 0*8,3*8,14*8,17*8
	.RADIX 10
HOFF:	.BYTE	0,3,6,9,12,14,15
VOFF:
	.BYTE	15,15,14,12,9,6,3
	.BYTE	0,-3,-6,-9,-12,-14,-15
	.BYTE	-15,-15,-14,-12,-9,-6,-3
	.BYTE	0,3,6,9,12,14,15
	.RADIX 8

DRSPD	=^H27E9
ERRMSG	=^H25E9
RAMERR	=DISP + 1044 + 4
ROMERR	=DISP + 1044 + 11.
COINER	=DISP + 1044 + 19.

TENSEC:	.BYTE 0,70,0,23,5,3,17,16,4,23,0,24,17,0,7,1
	.BYTE 15,5,0,20,14,1,31,46	;TEN SECONDS TO GAME START MESSAGE
	;INDY 8 TABLES
CWT:	.BYTE 27,6,5,4,3,2,1,0
	.BYTE 11,12,13,14,15,16,17	;ROTATION TABLE FOR CAR TURNING
	.BYTE 36,35,34,33,32,31,30
	.BYTE 21,22,23,24,25,26
SCRTBL:	.BYTE 260,360,60,60,260,360,160,160	;RATATION TABLE FOR PLAYER SCORE OUT
	.MACRO PAIR A,B
	.BYTE<A>*16.+<<B>&15.>
	.ENDM
	.LIST MEB
;
;ACCELERATION TABLE
;
ACTAB:
	.IRP A,<<7,1>,<7,1>,<7,1>,<5,3>,<2,4>,<0,5>>
	PAIR A
	.ENDM
	.IRP A,<<-1,5>,<-2,7>,<-1,7>,<-2,7>,<-3,7>,<-4,5>>
	PAIR A
	.ENDM
	.IRP A,<<-5,5>,<-6,4>,<-7,2>,<-7,0>>
	PAIR	A
	.ENDM
;
;DE-ACCELERATE TABLE
;
DACTAB:
	.IRP A,<<0,0>,<-2,-1>,<-4,-2>,<-6,-3>,<-7,-4>,<-7,-5>>
	PAIR A
	.ENDM
	.IRP A,<<-7,-5>,<-7,-6>,<-7,-6>,<-7,-7>,<-7,-7>,<-7,-7>>
	PAIR A
	.ENDM
	.IRP A,<<-7,-7>,<-7,-7>,<-7,-7>,<-7,-7>>
	PAIR A
	.ENDM
	.NLIST MEB

	.BYTE ^H6D
	.BYTE 0	;ROM 2 CHECKSUM = 0
	.=31770		;INTERRUPT VECTORS ETC.
	.BYTE COLINT/400,COLINT&377,INIT/400,INIT&377
	.BYTE COLINT/400,COLINT&377
	.BYTE INIT/400
	.BYTE INIT&377
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                    